spring:
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 连接池配置
      initial-size: 20 # 连接池初始化连接数量
      min-idle: 5      # 连接池最小连接数量
      max-active: 20   # 连接池最大连接数量
      # 时间配置
      max-wait: 1200  # 获取连接最大等待时长, 单位是毫秒
      time-between-eviction-runs-millis: 60000 # 定时检测需要关闭的空闲连接, 单位是毫秒
      min-evictable-idle-time-millis:  30000   # 配置一个连接在池中最小生存的时间, 单位是毫秒

      pool-prepared-statements:  false # mysql 推荐不缓存 preparedStatement

      # 配置监控统计拦截的 filters，去掉后监控界面sql无法统计，'wall'用于防火墙，wall会出现multi-statement not allow
      filters: stat,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true

      # 连接测试, 会降低性能
      validation-query: select 'x' # 判断连接是否成功的 sql 语句
      validation-query-timeout: 5  # 检测连接是否有效的超时时间, 单位是毫秒
      test-on-borrow: true         # 申请连接时执行 validationQuery 检测连接是否有效
      test-on-return: false        # 归还连接时执行validationQuery检测连接是否有效
      test-while-idle: true        # 申请连接时, 如果空闲时间大于 time-between-eviction-runs-millis, 则执行 validation-query 判断连接是否有效

      stat-view-servlet:
        url-pattern: /druid/*
        enabled: true
        allow: 127.0.0.1
        deny: 192.168.1.100        # deny 优先于 allow
        login-password: druid
        login-username: 12345
        reset-enable: false        # 是否能够重置数据
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico"


