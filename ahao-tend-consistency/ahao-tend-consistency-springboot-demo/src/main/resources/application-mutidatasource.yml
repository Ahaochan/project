ruyuan:
  tend:
    consistency:
      parallel:
        pool:
          thread-max-pool-size: 6
          thread-core-pool-size: 6
          thread-pool-keep-alive-time: 60
          thread-pool-keep-alive-time-unit: SECONDS
          thread-pool-queue-size: 100
          # 框架自身有默认的实现类，来扫描查询任务的开始时间以及结束时间，如果不满足需求，可自定义实现类，这里给出了实例
          task-schedule-time-range-class-name: com.ruyuan.eshop.range.MyTaskTimeRangeQuery
      action:
        fail-count-threshold: 0
      shard:
        task-sharded: true
        # 自定义的任务分片键实现类，如果不定义使用框架默认的实现
        sharding-key-generator-class-name: com.ruyuan.eshop.shard.MySnowflakeShardingKeyGenerator
      peers:
        peers-config: 192.168.0.222:8080:1,192.168.0.222:8081:2,192.168.0.222:8082:3
#      task:
#        sharding:
          # 一致性任务的分片数，不配置默认是上面配置的集群节点的个数
#          task-sharding-count: 3
      scheduler:
        # 一致性框架内置的执行任务时的调度器执行任务的频率，每隔多长时间调度一次，任务的调度
        consistency-task-execute-interval-seconds: 10
        # leader检测follower是否存活的调度器每隔多长时间执行一次检查
        follower-alive-check-interval-seconds: 10
        # follower对leader发送心跳的调度器
        follower-heartbeat-interval-seconds: 10
        # leader判定follower宕机的阈值
        judge-follower-down-seconds-threshold: 120
        # follower判定leader宕机的阈值
        judge-leader-down-seconds-threshold: 120
        # follower用于检测leader是否存活的调度器每隔多长时间执行一次检查
        leader-alive-check-interval-seconds: 10
        # leader定时发给follower的心跳的调度器，同时也会将leader对任务的分片信息发送给各个follower节点每隔多长时间执行一次
        leader-to-follower-heartbeat-interval-seconds: 10
      rocksdb:
        # RocksDB数据存储目录, 没有创建框架会自动进行创建
        rocks-path: /usr/local/middleware/rocksdb

spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    datasource:
      # 数据源名称
      names: ds0,ds1
      ds0:
        jdbc-url: jdbc:mysql://localhost:3306/consistency_task0?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&useSSL=false
        username: root
        password: rootroot
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
          connection-timeout: 3000
      ds1:
        jdbc-url: jdbc:mysql://localhost:3306/consistency_task1?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&useSSL=false
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: rootroot
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
          connection-timeout: 3000
    props:
      sql:
        show: true
    sharding:
      tables:
        # 最终一致性任务库分库策略
        ruyuan_tend_consistency_task:
          # 数据分布情况
          actual-data-nodes: ds$->{0..1}.ruyuan_tend_consistency_task
          # order库分库策略
          database-strategy:
            inline:
              sharding-column: shard_key
              algorithm-expression: ds$->{shard_key % 2}
